#include <stdio.h>


void heapify(int arr[], int n, int root) {

    int largest = root;

    int left = 2 * root + 1;

    int right = 2 * root + 2;



    if (left < n && arr[left] > arr[largest])

        largest = left;



    if (right < n && arr[right] > arr[largest])

        largest = right;



    if (largest != root) {

        int temp = arr[root];

        arr[root] = arr[largest];

        arr[largest] = temp;



        heapify(arr, n, largest);

    }

}



// Main function to perform heap sort

void heapSort(int arr[], int n) {

    // Build max heap

    for (int i = n / 2 - 1; i >= 0; i--)

        heapify(arr, n, i);



    // Extract elements from heap one by one

    for (int i = n - 1; i > 0; i--) {

        int temp = arr[0];

        arr[0] = arr[i];

        arr[i] = temp;



        heapify(arr, i, 0);

    }

}



int main() {

    int n;

    printf("Enter the number of elements: ");

    scanf("%d", &n);



    int arr[n];

    printf("Enter %d elements: ", n);

    for (int i = 0; i < n; i++)

        scanf("%d", &arr[i]);



    heapSort(arr, n);



    printf("Sorted array: ");

    for (int i = 0; i < n; i++)

        printf("%d ", arr[i]);



    return 0;

}
